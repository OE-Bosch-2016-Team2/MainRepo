/*
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package acc;

import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author Laci
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        myACC = new ACC();
        wheelStateInDegrees = currentSpeed = 0;
        nearestObstacleDistance = 50;
    }

    public IACC myACC;
    public boolean ACCState;

    int wheelStateInDegrees;
    int currentSpeed;
    int nearestObstacleDistance;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ButtonACC = new javax.swing.JButton();
        SliderWheel = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        SliderSpeed = new javax.swing.JSlider();
        SliderObstacleDistance = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        LabelState = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ButtonACC.setText("ACC off");
        ButtonACC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonACCActionPerformed(evt);
            }
        });

        SliderWheel.setMaximum(90);
        SliderWheel.setMinimum(-90);
        SliderWheel.setPaintLabels(true);
        SliderWheel.setPaintTicks(true);
        SliderWheel.setValue(0);
        SliderWheel.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                SliderWheelCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel1.setText("Wheel steering");

        SliderSpeed.setMaximum(200);
        SliderSpeed.setPaintLabels(true);
        SliderSpeed.setPaintTicks(true);
        SliderSpeed.setValue(0);
        SliderSpeed.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                SliderSpeedCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        SliderObstacleDistance.setPaintLabels(true);
        SliderObstacleDistance.setPaintTicks(true);
        SliderObstacleDistance.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
                SliderObstacleDistanceCaretPositionChanged(evt);
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel2.setText("Speed");

        jLabel3.setText("Distance");

        LabelState.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        LabelState.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelState, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SliderWheel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonACC)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addGap(166, 166, 166))
                                    .addComponent(SliderSpeed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLabel3))
                            .addComponent(SliderObstacleDistance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonACC)
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SliderWheel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(SliderSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(SliderObstacleDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(19, 19, 19)
                .addComponent(LabelState, javax.swing.GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonACCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonACCActionPerformed
        // TODO add your handling code here:
        if (ACCState) {
            ButtonACC.setText("ACC off");

        } else {
            ButtonACC.setText("ACC on");
        }
        ACCState = !ACCState;
        ChangeLabel();
    }//GEN-LAST:event_ButtonACCActionPerformed

    private void SliderWheelCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_SliderWheelCaretPositionChanged
        // TODO add your handling code here:
        wheelStateInDegrees = SliderWheel.getValue();
        ChangeLabel();
    }//GEN-LAST:event_SliderWheelCaretPositionChanged

    private void SliderSpeedCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_SliderSpeedCaretPositionChanged
        // TODO add your handling code here:
        currentSpeed = SliderSpeed.getValue();
        ChangeLabel();
    }//GEN-LAST:event_SliderSpeedCaretPositionChanged

    private void SliderObstacleDistanceCaretPositionChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_SliderObstacleDistanceCaretPositionChanged
        // TODO add your handling code here:
        nearestObstacleDistance = SliderObstacleDistance.getValue();
        ChangeLabel();
    }//GEN-LAST:event_SliderObstacleDistanceCaretPositionChanged

    private void ChangeLabel() {
        myACC.PedalState(wheelStateInDegrees, ACCState, currentSpeed, nearestObstacleDistance);
        int temp = myACC.getPedal();
        switch (temp) {
            case 1:
                LabelState.setText("Throttling!!!");
                break;
            case 0:
                LabelState.setText("Do nothing!!!");
                break;
            default:
                LabelState.setText("Breaking!!!");
                break;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonACC;
    private javax.swing.JLabel LabelState;
    private javax.swing.JSlider SliderObstacleDistance;
    private javax.swing.JSlider SliderSpeed;
    private javax.swing.JSlider SliderWheel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
